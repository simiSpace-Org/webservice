name: Packer Build

env:
  ARTIFACT_NAME: webservice-${{ github.sha }}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

on:
  push:
    branches: [main]

jobs:
  ci_cd:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Built Deployment Artifacts
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} webservice codedeploy/*.sh appspec.yml
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact
          cd codedeploy_artifact
          pwd
          ls -al
          cd ..
          pwd
          ls -al

      - name: Configuring AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}

      - name: Upload Artifact Zip to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.CODEDEPLOY_BUCKET }}

      - name: Make CodeDeploy API call
        run: |
          output=$(aws deploy create-deployment \
          --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
          --description "CSYE6225 - CodeDeploy" \
          --s3-location bucket=${{ secrets.CODEDEPLOY_BUCKET }},bundleType=zip,key=${{ env.ARTIFACT_NAME }} \
          --region ${{ env.AWS_REGION }} \
          --output json)
        
          echo $output
          dID=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $dID

      - name: Packer Build
        uses: ExitoLab/packer_build_action_aws@v0.2.10
        with:
          templateFile: "packer/ami.json"
          varFile: vars.json
          workingDir: .
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AMI_USERS: ${{ secrets.AMI_USERS }}
          